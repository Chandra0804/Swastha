public void Load_Patient_CSV()
{

try
{

String csvFilePath = "E:\\IIIT SRI CITY\\SEMESTER - 3\\OOP                  [SECTION - 3]\\PROJECT\\Excel and CSV Data Files For Project\\Patient_CSV.csv";


Class.forName("com.mysql.cj.jdbc.Driver");
Connection connection= DriverManager.getConnection("jdbc:mysql://localhost:3306/Swastha", "root", "1234");
connection.setAutoCommit(false);


Statement stmt = connection.createStatement();
stmt.execute("create table if not exists Patient(Patient_ID varchar(30), Name varchar(50), Blood_Group varchar(20), DateOfBirth varchar(20), Email varchar(50), Password varchar(50), Gender varchar(20), Address varchar(300), Pincode int, Patient_Weight int, Patient_Height decimal(10,2))");
stmt.execute("truncate table Patient");


PreparedStatement statement = connection.prepareStatement("insert into Patient values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
BufferedReader lineReader = new BufferedReader(new FileReader(csvFilePath));


String lineText = null;
int count = 0, batchSize = 20;
lineReader.readLine(); 



while ((lineText = lineReader.readLine()) != null) 
{

String[] data = lineText.split(",");

String ID           =  data[0];
String name         =  data[1];
String blood_group  =  data[2];
String dob          =  data[3];
String email        =  data[4];
String password     =  data[5];
String gender       =  data[6];

String address = "";
int index = 7;

while (true)
{
boolean isNumeric = data[index].chars().allMatch( Character::isDigit );
if (isNumeric)
	{ int length = address.length();
	  address = address.substring(2, length - 1);
	  break;
	}
else
	{ address = address + "," + data[index];
	  index = index + 1;
	}
}

int pincode         =  Integer.parseInt(data[index]);
int weight          =  Integer.parseInt(data[index + 1]);
double height       =  Double.parseDouble(data[index + 2]);
	
statement.setString(1, ID);
statement.setString(2, name);
statement.setString(3, blood_group);
statement.setString(4, dob);
statement.setString(5, email);
statement.setString(6, password);
statement.setString(7, gender);
statement.setString(8, address);
statement.setInt(9, pincode);
statement.setInt(10, weight);
statement.setDouble(11, height);

statement.addBatch();
 
if (count % batchSize == 0)
	statement.executeBatch();


}

 
lineReader.close();

statement.executeBatch();
connection.commit();
connection.close();

System.out.print("\nInsertion of Patient Data into Database Server is Successfully Implemented\n");

}



catch(Exception e)
{
System.out.println("\nAn Exception has Occurred\n");
System.err.println(e);
}

}      // End Load_Patient_CSV Class








public void Load_Doctor_CSV()
{

try
{

String csvFilePath = "E:\\IIIT SRI CITY\\SEMESTER - 3\\OOP                  [SECTION - 3]\\PROJECT\\Excel and CSV Data Files For Project\\Doctor_CSV.csv";

Class.forName("com.mysql.cj.jdbc.Driver");
Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/Swastha", "root", "1234");
connection.setAutoCommit(false);


Statement stmt = connection.createStatement();
stmt.execute("create table if not exists Doctor(Hospital_ID varchar(30), Name varchar(50), Gender varchar(20), DateOfBirth varchar(20), Specialization enum('IMMUNOLOGY','ANESTHESIOLOGY','DERMATOLOGY','ENT','NEUROLOGY','PEDIATRICS','PATHOLOGY','ONCOLOGY','DENTISTRY','OPTHALMOLOGY','EMERGENCY','GYNECOLOGY'), Email varchar(50), Password varchar(50), Address varchar(200), Pincode int)");
stmt.execute("truncate table Doctor");


PreparedStatement statement = connection.prepareStatement("insert into Doctor values (?, ?, ?, ?, ?, ?, ?, ?, ?)");
BufferedReader lineReader = new BufferedReader(new FileReader(csvFilePath));


String lineText = null;
int count = 0, batchSize = 20;
lineReader.readLine(); 


while ((lineText = lineReader.readLine()) != null) 
{

String[] data = lineText.split(",");

String ID        =  data[0];
String name      =  data[1];
String gender    =  data[2];
String dob       =  data[3];
String specialization  =  data[4];
String email     =  data[5];
String password   =  data[6];

String address = "";
int index = 7;

while (true)
{
boolean isNumeric = data[index].chars().allMatch( Character::isDigit );
if (isNumeric)
	{ int length = address.length();
	  address = address.substring(2, length - 1);
	  break;
	}
else
	{ address = address + "," + data[index];
	  index = index + 1;
	}
}

int pincode         =  Integer.parseInt(data[index]);

statement.setString(1, ID);
statement.setString(2, name);
statement.setString(3, gender);
statement.setString(4, dob);
statement.setString(5, specialization);
statement.setString(6, email);
statement.setString(7, password);
statement.setString(8, address);
statement.setInt(9, pincode);

statement.addBatch();
 
if (count % batchSize == 0)
	statement.executeBatch();


}


 
lineReader.close();

statement.executeBatch();
connection.commit();
connection.close();

System.out.print("\nInsertion of Doctor Data into Database Server is Successfully Implemented\n");


}


catch(Exception e)
{
System.out.println("\nAn Exception has Occurred\n");
System.err.println(e);
}



}   // End Load_Doctor_CSV Class







public void Sign_Up_Patient(Patient Patient_Object)
{



}   // End Sign_Up_Patient Class











public void Login_Patient()
{



}    // End Login_Patient Class












